// Structure

$space: 1rem;

// Margins
@mixin margins {
  $directions: (t -top, r -right, b -bottom, l -left);
  $max: 4;
  @for $i from 1 through $max {
    .m#{$i} { margin: $space * $i }
    @each $direction in $directions {
      $short: nth($direction, 1);
      $suffixes: nth($direction, 2);
      @if (length($direction) == 3) {
        $suffixes: (nth($direction, 2) nth($direction, 3));
      }
      .m#{$short}#{$i} {
        @each $suffix in $suffixes {
          margin#{$suffix}: $space * $i;
        }
      }
    }
  }
}
@include margins;

// Padding
@mixin padding {
  $directions: (x -right -left, y -top -bottom);
  $max: 4;
  @for $i from 1 through $max {
    .p#{$i} { padding: $space * $i }
    @each $direction in $directions {
      $short: nth($direction, 1);
      $suffixes: nth($direction, 2);
      @if (length($direction) == 3) {
        $suffixes: (nth($direction, 2) nth($direction, 3));
      }
      .p#{$short}#{$i} {
        @each $suffix in $suffixes {
          padding#{$suffix}: $space * $i;
        }
      }
    }  
  }
}
@include padding;

// Generic tappable padding (for links and other inline elements)
.tap-pad { line-height: 3rem; min-height: 3rem; }

// Display
.di { display: inline; }
.db  { display: block; }
.dib { display: inline-block; }
.dt { display: table; }
.dtc {
  display: table-cell;
  vertical-align: middle;
}

.cf {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.fl { float: left; }
.fr { float: right; }

.mxa {
  margin-right: auto;
  margin-left: auto;
}
.fit { max-width: 100%; }

// Max-width used to control typographic measure
.mw40 { max-width: 40rem; } // 640px
